/*-----------------------------------*\
  #CUSTOM PROPERTY
\*-----------------------------------*/

:root {
  /* Color Variables */
  --safety-orange: hsl(219, 87%, 37%);
  --lavender-gray: hsl(230, 19%, 81%);
  --persian-rose: hsl(224, 98%, 22%);
  --red-crayola: hsl(236, 84%, 12%); /* Primary accent color */
  --eerie-black: hsl(240, 6%, 10%); /* Main heading/dark text color */
  --light-gray: hsl(0, 0%, 80%);
  --cultured-2: hsl(210, 60%, 98%); /* Light background variant */
  --platinum: hsl(0, 0%, 90%); /* Border color */
  --gray-web: hsl(220, 5%, 49%); /* Body text color */
  --cultured: hsl(0, 0%, 93%); /* Input background, borders */
  --black_10: hsla(0, 0%, 0%, 0.1);
  --black_5: hsla(0, 0%, 0%, 0.05);
  --white-1: hsl(0, 0%, 100%); /* Main background color */
  --white-2: hsl(0, 14%, 98%); /* Alternate section background */
  --black: hsl(0, 0%, 0%);

  /* Gradients */
  --gradient: linear-gradient(to left top, var(--persian-rose), var(--safety-orange));

  /* Typography */
  --ff-roboto: 'Roboto', sans-serif;
  --ff-league-spartan: 'League Spartan', sans-serif;
  --fs-base: 1.6rem; /* Base font size (body) */
  --fs-1: 3.5rem;
  --fs-2: 3rem;
  --fs-3: 2.1rem;
  --fs-4: 1.7rem;
  --fs-5: 1.4rem;
  --fs-6: 1.3rem;
  --fw-700: 700;
  --fw-500: 500;
  --lh-base: 1.8; /* Base line height */

  /* Spacing */
  --section-padding: 60px;
  --container-padding: 15px;
  --header-height: 70px; /* Combined mobile/desktop */

  /* Borders & Radius */
  --radius-2: 2px;
  --radius-5: 5px;
  --radius-8: 8px;
  --radius-circle: 50%;
  --input-radius: var(--radius-8);
  --input-border: 1px solid var(--cultured);

  /* Shadows */
  --shadow-1: 0 6px 24px var(--black_5);
  --shadow-2: 0 2px 28px var(--black_10);

  /* Transitions */
  --transition-1: 0.25s ease;
  --transition-2: 0.5s ease;
  --cubic-out: cubic-bezier(0.33, 0.85, 0.4, 0.96);

  /* Form Elements */
  --focus-ring: 0 0 0 3px hsla(236, 84%, 12%, 0.3); /* Use HSL for transparency with --red-crayola */
  --spinner-color: var(--red-crayola);

  /* Mobile Specific (Can be overridden in media queries if needed) */
  --mobile-tap-target: 44px; /* Minimum touch target size */

  /* How We Work Colors */
  --step-1: #FF6B6B;
  --step-2: #4ECDC4;
  --step-3: #45B7D1;
  --step-4: #A37EBA;
  --step-5: #FFA07A;
  --image-border-width: 4px;
  --image-border-radius: 12px;
}

/*-----------------------------------*\
  #RESET & BASE STYLES
\*-----------------------------------*/

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  font-family: var(--ff-roboto);
  font-size: 10px; /* Base for rem units (1rem = 10px) */
  scroll-behavior: smooth;
 /* overflow-x: hidden; */ /* Let sticky positioning work */
  -webkit-text-size-adjust: 100%; /* Prevent font scaling on rotation */
  -webkit-tap-highlight-color: transparent; /* Remove tap highlight on touch devices */
}

body {
  background-color: var(--white-1);
  color: var(--gray-web);
  font-size: var(--fs-base);
  line-height: var(--lh-base);
 /* overflow-x: hidden; */ /* Let sticky positioning work */
  position: relative;
  min-height: 100vh;
  width: 100%;
  touch-action: pan-y; /* Allow vertical scroll, prevent default horizontal gestures */
}

body.nav-active {
  overflow: hidden; /* Prevent scrolling when mobile menu is open */
}

/* Hide scrollbars while preloader is active */
body.preloader-active {
  overflow: hidden;
}

li { list-style: none; }

a {
  text-decoration: none;
  color: inherit;
}

a, img, span, time, label, input, button, textarea, ion-icon, svg { /* Added svg */
  display: block; /* Make elements block-level by default */
}

img, svg { /* Added svg */
  height: auto; /* Maintain aspect ratio */
  max-width: 100%; /* Prevent images from overflowing */
}

input, button, textarea {
  background: none;
  border: none;
  font: inherit;
  color: inherit;
}

input, textarea {
  width: 100%;
}

button {
  cursor: pointer;
}

ion-icon {
  pointer-events: none; /* Prevent icons from capturing clicks */
}

address { font-style: normal; }

h1, h2, h3 {
  color: var(--eerie-black);
  font-family: var(--ff-league-spartan);
  line-height: 1.2;
}

h1 { font-size: var(--fs-1); }
h2 { font-size: var(--fs-2); }
h3 { font-size: var(--fs-3); }

:focus-visible {
  outline: 2px solid var(--red-crayola);
  outline-offset: 4px;
  box-shadow: var(--focus-ring); /* Optional: add focus ring */
}

/* Screen Reader Only Class */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}


/* Custom Scrollbar */
::-webkit-scrollbar { width: 10px; }
::-webkit-scrollbar-track { background-color: var(--white-2); }
::-webkit-scrollbar-thumb { background-color: var(--light-gray); border-radius: 5px;}
::-webkit-scrollbar-thumb:hover { background-color: var(--gray-web); }


/* ================= PRELOADER STYLES START ================= */
/*-----------------------------------*\
  #PRELOADER STYLES
\*-----------------------------------*/

.preloader {
  position: fixed;
  inset: 0; /* Equivalent to top: 0; right: 0; bottom: 0; left: 0; */
  background-color: #1360b8; /* User defined color */
  z-index: 10000; /* Ensure it's above everything else */
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 1;
  visibility: visible;
  pointer-events: auto;

  /* Exit Transition (when .loaded is added) */
  transition: opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1), /* Fade out overlay */
              visibility 0s linear 0.8s; /* Hide after fade */
}

.preloader-container {
  /* Animation for the content */
  opacity: 0;
  transform: scale(0.8);
  animation: preloaderContentEnter 0.8s cubic-bezier(0.4, 0, 0.2, 1) 0.2s forwards; /* duration, timing, delay, fill-mode */
}

/* Entrance Animation for the content */
@keyframes preloaderContentEnter {
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* Styling for the Logo */
.preloader-logo {
  display: block;
  width: 300px; /* User defined size */
  max-width: 80%; /* Prevent logo being too large */
  height: auto; /* Maintain aspect ratio */
  fill: #ffffff; /* Set SVG fill color if applicable */
}

/* Styles when loading is finished */
.preloader.loaded {
  opacity: 0;
  visibility: hidden;
  pointer-events: none; /* Disable interaction when hidden */
}

/* Optional: Fade out the content slightly before the overlay */
.preloader.loaded .preloader-container {
  opacity: 0;
  transform: scale(0.8);
  transition: opacity 0.4s ease, transform 0.4s ease; /* Exit animation */
}
/* ================= PRELOADER STYLES END =================== */


/*-----------------------------------*\
  #REUSED STYLES
\*-----------------------------------*/

.container {
  padding-inline: var(--container-padding);
  max-width: 1170px;
  width: 100%;
  margin-inline: auto;
}

.section {
  padding-block: var(--section-padding);
}

.section-title,
.section-text {
  text-align: center;
}

.section-title {
    margin-bottom: 15px;
}

.section-text {
  font-size: var(--fs-6);
  max-width: 65ch;
  margin-inline: auto;
}

.section-text:not(:last-child) {
    margin-bottom: 18px;
}

.btn {
  max-width: max-content;
  font-size: var(--fs-6);
  font-weight: var(--fw-700);
  padding: 12px 30px;
  border-radius: var(--radius-5);
  transition: var(--transition-1);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 5px;
  min-height: var(--mobile-tap-target);
  border: 1px solid transparent;
  vertical-align: middle;
  cursor: pointer;
}

.btn-primary {
  background-image: var(--gradient);
  background-size: 200% auto;
  color: var(--white-1);
}

.btn-primary:is(:hover, :focus-visible) {
  background-position: right center;
  color: var(--white-1);
  border-color: transparent;
}

.btn-secondary {
  background-color: var(--white-1);
  color: var(--eerie-black);
  border: 1px solid var(--cultured);
}

.btn-secondary:is(:hover, :focus-visible) {
  background-color: var(--eerie-black);
  color: var(--white-1);
  border-color: var(--eerie-black);
}

/* Specific button styling adjustments if needed */
.btn-sm { /* If using Bootstrap's btn-sm */
    padding: 0.25rem 0.5rem;
    font-size: .875rem;
    border-radius: var(--radius-2);
}
.btn-light { /* If using Bootstrap's btn-light */
    color: #000;
    background-color: #f8f9fa;
    border-color: #f8f9fa;
}
.btn-light:hover {
    color: #000;
    background-color: #e2e6ea;
    border-color: #d3d9df;
}


.grid-list {
  display: grid;
  gap: 30px;
  align-items: stretch;
}

.img-holder {
  aspect-ratio: var(--width) / var(--height);
  background-color: var(--light-gray);
  overflow: hidden;
}

.img-cover {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.w-100 { width: 100%; }


/*-----------------------------------*\
  #HEADER & NAVIGATION
\*-----------------------------------*/

.header {
  position: fixed; top: 0; left: 0; width: 100%;
  background-color: var(--white-1); padding-block: 15px;
  border-block-end: 1px solid var(--cultured); z-index: 1000;
  transition: box-shadow var(--transition-1);
}
.header.active { box-shadow: var(--shadow-2); }
.header > .container { display: flex; justify-content: space-between; align-items: center; gap: 20px; }
.logo { font-family: var(--ff-league-spartan); color: var(--black); font-size: 3.5rem; font-weight: var(--fw-700); line-height: 1; }

.nav-toggle-btn {
  display: flex; align-items: center; justify-content: center;
  font-size: 30px; color: var(--eerie-black); width: var(--mobile-tap-target);
  height: var(--mobile-tap-target); background: none; border: none;
}
.nav-toggle-btn .open, .nav-toggle-btn.active .close { display: block; }
.nav-toggle-btn .close, .nav-toggle-btn.active .open { display: none; }

.mobile-menu-overlay {
  position: fixed; top: 0; left: 0; width: 100%; height: 100%;
  background: rgba(0, 0, 0, 0.7); z-index: 998; opacity: 0; visibility: hidden;
  transition: opacity var(--transition-1), visibility 0s var(--transition-1);
}
.mobile-menu-overlay.active { opacity: 1; visibility: visible; transition: opacity var(--transition-1); }

.navbar {
  position: fixed; top: 0; left: -300px; width: 280px; max-width: 80%;
  height: 100vh; background: var(--white-1); z-index: 999; overflow-y: auto;
  padding: var(--header-height) 20px 40px; box-shadow: 2px 0 15px rgba(0, 0, 0, 0.1);
  visibility: hidden; transition: transform 0.4s var(--cubic-out), visibility 0s 0.4s;
}
.navbar.active { transform: translateX(300px); visibility: visible; transition: transform 0.4s var(--cubic-out); }
.navbar-list { display: flex; flex-direction: column; gap: 5px; margin-bottom: 20px; }
.navbar-link {
  color: var(--eerie-black); font-family: var(--ff-league-spartan); font-size: var(--fs-4);
  line-height: 1.2; padding: 10px 0; border-bottom: 1px solid var(--cultured);
  transition: color var(--transition-1);
}
.navbar-link:is(:hover, :focus-visible) { color: var(--red-crayola); }
.navbar-link.active { font-weight: var(--fw-700); color: var(--red-crayola); }

.mobile-socials { display: block; padding-top: 20px; border-top: 1px solid var(--cultured); margin-top: 20px; }
.mobile-socials .social-links { display: flex; justify-content: center; gap: 25px; }
.mobile-socials a { color: var(--eerie-black); font-size: 24px; transition: color var(--transition-1); }
.mobile-socials a:is(:hover, :focus-visible) { color: var(--red-crayola); }

/*-----------------------------------*\
  #SECTION FADE-IN ANIMATION
\*-----------------------------------*/

main > article > section {
  opacity: 0; /* <-- UNCOMMENTED THIS LINE */
  transform: translateY(30px); /* <-- UNCOMMENTED THIS LINE */
  transition: opacity 0.7s ease-out, transform 0.7s ease-out; /* Keep transition */
}

/* Keep the hero exception */
main > article > section.hero {
  opacity: 1;
  transform: translateY(0);
}

/* Keep the .in-view rule */
main > article > section.in-view {
  opacity: 1;
  transform: translateY(0);
}


/*-----------------------------------*\
  #HERO SECTION
\*-----------------------------------*/

.hero { padding-block-start: calc(var(--header-height) + 40px); padding-block-end: var(--section-padding); text-align: center; }
.hero .container { display: flex; flex-direction: column; align-items: center; gap: 40px; }
.hero-content { max-width: 600px; width: 100%; }
.hero-subtitle { color: var(--eerie-black); font-size: var(--fs-5); font-weight: var(--fw-500); }
.hero-title { margin-block: 12px 15px; }
.hero-text { font-size: var(--fs-5); margin-bottom: 25px; }
.hero .btn { margin-inline: auto; }
.hero-media-container { position: relative; width: 100%; max-width: 450px; margin-inline: auto; aspect-ratio: 9 / 16; overflow: hidden; border-radius: var(--radius-8); background-color: var(--black); }
.hero-video, .hero-media-container .img-cover { width: 100%; height: 100%; object-fit: contain; object-position: center; }
.hero-media-container .img-cover { display: none; }
.video-overlay { position: absolute; inset: 0; background: linear-gradient(to bottom, rgba(0,0,0,0.3) 0%, rgba(0,0,0,0.1) 40%, transparent 70%); z-index: 1; pointer-events: none; }

/*-----------------------------------*\
  #SERVICE SECTION - Refined Styles
\*-----------------------------------*/

.service { background-color: var(--white-1); padding-block: var(--section-padding); border-top: 1px solid var(--cultured); border-bottom: 1px solid var(--cultured); }
.service .section-title { margin-bottom: 15px; }
.service .section-text { margin-bottom: 60px; }
.service .grid-list { gap: 30px; }
.service-card {
  background-color: var(--white-1); border: 1px solid var(--cultured); box-shadow: none;
  border-radius: var(--radius-5); padding: 30px 25px; text-align: left;
  transition: border-color var(--transition-1), transform var(--transition-1), box-shadow var(--transition-1);
  height: 100%; display: flex; flex-direction: column;
}
.service-card:is(:hover, :focus-within) { transform: translateY(-5px); border-color: var(--red-crayola); box-shadow: var(--shadow-1); outline: none; }
.service-card .card-icon {
  width: 50px; height: 50px; font-size: 24px; margin-bottom: 20px; margin-inline: 0;
  border-radius: var(--radius-circle); display: flex; align-items: center; justify-content: center; color: var(--white-1);
}
.service-card .card-title { font-size: var(--fs-4); margin-block: 0 10px; }
.service-card .card-title a.card-title-link { color: var(--eerie-black); text-decoration: none; }
.service-card:is(:hover, :focus-within) .card-title a.card-title-link { color: var(--red-crayola); }
.service-card .card-text { font-size: var(--fs-6); color: var(--gray-web); line-height: 1.7; flex-grow: 1; }

/* --- End of Service Section Refined Styles --- */


/* ================================================== */
/* CSS for Project Section - 3D CSS Carousel        */
/* ================================================== */

/* --- Container for Carousel and Controls --- */
#carousel-container {
  position: relative; /* Establish positioning context */
  width: 100%;
  max-width: 1000px; /* Max width of the carousel area */
  margin: 40px auto; /* Center and add space */
  padding-bottom: 50px; /* Space for controls below */
}

/* --- The Carousel Stage --- */
#carousel {
  /* Removed grid positioning relative to body */
  width: 100%; /* Take width of container */
  height: 500px; /* Height of the carousel stage */
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  transform-style: preserve-3d;
  perspective: 600px; /* Adjust for more/less 3D effect */
  position: relative; /* Contains absolute items */

  /* --- CSS Variables --- */
  --items: 6; /* UPDATED for 6 items */
  --middle: 3.5; /* Adjusted middle point for 6 items (between 3 and 4) */
  --position: 1; /* Default selected item */
}

/* --- Carousel Items --- */
div.item {
  position: absolute;
  width: 300px;  /* Width of a single item */
  height: 400px; /* Height of a single item */
  /* background-color: coral; */ /* Base color removed, using images */
  background-size: cover;
  background-position: center;
  border-radius: 10px; /* Add some rounding */
  box-shadow: 0 5px 15px rgba(0,0,0,0.2);

  /* --- Calculation Variables --- */
  --r: calc(var(--position) - var(--offset));
  --abs: max(calc(var(--r) * -1), var(--r)); /* Absolute difference */

  /* --- Transformations & Stacking --- */
  transition: all 0.3s ease-out; /* Smoother transition */
  transform: rotateY(calc(-10deg * var(--r))) /* Rotation */
             translateX(calc(-320px * var(--r))) /* Horizontal position - adjusted */
             translateZ(calc(-50px * var(--abs))); /* Move non-active items back */
  z-index: calc(var(--items) - var(--abs)); /* Stack active item higher */
  opacity: calc(1 - (var(--abs) / var(--items) * 1.5)); /* Fade out distant items */
}

/* ================================================== */
/* CSS for 3D Carousel Arrow Buttons                */
/* ================================================== */

.carousel-arrow-btn {
  position: absolute; /* Position relative to #carousel-container */
  top: 50%;
  transform: translateY(-50%);
  z-index: 20; /* Ensure buttons are above carousel items */

  background-color: rgba(255, 255, 255, 0.7); /* Semi-transparent background */
  color: var(--eerie-black); /* Icon color */
  border: none;
  border-radius: 50%;
  width: 44px;  /* Button size */
  height: 44px;
  font-size: 24px; /* Icon size */
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background-color 0.2s ease, opacity 0.3s ease;
  box-shadow: 0 2px 5px rgba(0,0,0,0.2);
}

.carousel-arrow-btn:hover,
.carousel-arrow-btn:focus-visible {
  background-color: rgba(255, 255, 255, 0.9);
}

#carousel-prev-btn {
  left: 20px; /* Adjust position from left */
}

#carousel-next-btn {
  right: 20px; /* Adjust position from right */
}

/* Style for disabled state */
.carousel-arrow-btn.disabled {
  opacity: 0.4;
  cursor: not-allowed;
  pointer-events: none; /* Prevent clicks on disabled button */
}

/* Adjust positioning on mobile if needed */
@media (max-width: 767px) {
  #carousel-prev-btn {
      left: 10px;
  }
  #carousel-next-btn {
      right: 10px;
  }
   .carousel-arrow-btn {
       width: 38px;
       height: 38px;
       font-size: 20px;
   }
}

/* --- Assign Offset and Background Image per Item --- */
/* IMPORTANT: REPLACE PLACEHOLDER URLS! */
div.item:nth-of-type(1) { --offset: 1; background-image: url('../images/project-1.jpg'); /* Correct path */}
div.item:nth-of-type(2) { --offset: 2; background-image: url('../images/project-2.jpg'); }
div.item:nth-of-type(3) { --offset: 3; background-image: url('../images/project-3.jpg'); }
div.item:nth-of-type(4) { --offset: 4; background-image: url('../images/project-4.jpg'); }
div.item:nth-of-type(5) { --offset: 5; background-image: url('../images/project-5.jpg'); }
div.item:nth-of-type(6) { --offset: 6; background-image: url('../images/project-6.jpg'); }

/* --- Basic Mobile Adjustments --- */
@media (max-width: 767px) {
  div.item {
      width: 220px;  /* Smaller items on mobile */
      height: 300px;
      /* Adjust transform distances for smaller items/screen */
      transform: rotateY(calc(-8deg * var(--r)))
                 translateX(calc(-230px * var(--r)))
                 translateZ(calc(-40px * var(--abs)));
  }
  #carousel {
       height: 350px; /* Adjust stage height */
       perspective: 400px;
  }

   .carousel-controls {
       margin-top: 15px;
   }
}

/* ================================================== */
/* End of CSS for 3D CSS Carousel                   */
/* ================================================== */


/*-----------------------------------*\
  #HOW WE WORK SECTION
\*-----------------------------------*/

.body {
	background-color: #440303;
	font-family: 'Arial', sans-serif;
}

:root {
  /* ... other root variables ... */
  --cards: 4; /* Keep this matching the number of cards */
  --cardHeight: 70vh; /* Slightly reduced height might feel better */
  --cardTopPadding: 10px; /* CRITICAL: Set to a positive value for visual stacking offset */
  --cardMargin: 4vw;
}

/* --- Optional: Container for Section Title --- */
.section-title-container {
    margin-bottom: 40px; /* Space between title and cards */
    position: relative; /* Keep title above cards initially */
    z-index: 1; /* Keep title above cards initially */
}
.section-title-container .section-title,
.section-title-container .section-text {
     /* Adjust text color if your section background is dark */
     /* color: var(--white-1); */
}


/* --- Stacking Card Container --- */
.cards-container {
  /* Inherit width/margin from .container */
  /* position: relative; */
}

/* --- Card List --- */
#cards {
  list-style: none;
  padding-left: 0;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: repeat(var(--cards), var(--cardHeight));
  gap: var(--cardMargin);
  padding-bottom: calc(var(--cards) * var(--cardTopPadding));
  margin-bottom: var(--cardMargin);
  background-color: transparent; /* Keep transparent */
}

/* --- Individual Sticky Card --- */
.card {
  position: sticky;
  top: 0;
  padding-top: calc(var(--index) * var(--cardTopPadding));
  background-color: transparent; /* Keep transparent */
  border-radius: 40px;
  overflow: hidden;
  /* --index variable should still be set per card ID */
}

/* --- MODIFIED: Card Body for two-column layout --- */
.card-body {
  box-sizing: border-box;
  height: var(--cardHeight);
  display: flex;
  /* flex-direction: column; */   /* <-- REMOVED */
  flex-direction: row;         /* <-- CHANGED to row */
  justify-content: space-between;/* <-- ADJUSTED for spacing between columns */
  align-items: center;         /* Vertically center columns */
  /* text-align: center; */      /* <-- REMOVED */

  /* Visual Styles */
  background-color: rgb(16, 16, 20);
  color: rgb(248, 248, 248);
  border-radius: 40px;
  padding: 50px 60px; /* Updated padding - adjust as needed */

  /* Border */
  border: 1px solid rgb(248, 248, 248);
  /* Ensure others are off */
  /* box-shadow: none; */
  /* outline: none; */

  transition: all 0.5s;
  overflow: hidden; /* Keep hidden */
}

/* --- REMOVED: .card-content-inner rule is no longer needed --- */
/*
.card-content-inner {
  max-width: 600px;
  width: 100%;
}
*/

/* --- NEW: Rules for Columns --- */
.card-text-column {
  flex: 0 1 45%; /* Adjust width percentage as needed (e.g., 45%) */
  text-align: left;
  padding-right: 30px; /* Space between text and image columns */
}

.card-image-column {
  flex: 0 1 50%; /* Adjust width percentage as needed (e.g., 50%) */
  display: flex;
  justify-content: center;
  align-items: center;
}

/* --- MODIFIED: Text Element Styles --- */
.card-step-number {
  display: block;
  font-size: 1.8rem;
  font-weight: 700;
  color: var(--red-crayola);
  margin-bottom: 15px;
  opacity: 0.7;
}

.card-title {
  font-family: var(--ff-league-spartan);
  font-size: var(--fs-2);
  color: var(--white-1);
  margin-bottom: 20px;
  line-height: 1.3;
  text-align: left; /* Ensure left align */
}

.card-text {
  font-family: var(--ff-roboto);
  font-size: var(--fs-5);
  color: var(--cultured);
  line-height: 1.7;
  margin: 0; /* Remove auto margin */
  text-align: left; /* Ensure left align */
}

/* --- Optional: Icon style (if used) --- */
.card-icon {
  font-size: 4rem;
  margin-top: 30px;
  color: var(--red-crayola);
  opacity: 0.8;
}

/* --- NEW: Rule for Image --- */
.card-image-column img {
  display: block;
  max-width: 100%;
  height: auto;
  border-radius: 20px; /* Optional rounding */
  /* Add background/padding here if you want to style the image like Bloomr's graphic */
  /* background-color: rgba(255, 255, 255, 0.05); */
  /* padding: 15px; */
}

/* --- Section Background --- */
.stacking-cards-section {
  background-color: transparent; /* Keep transparent if body is white */
  /* padding if needed */
}

/*-----------------------------------*\
  #ABOUT SECTION
\*-----------------------------------*/

.about .container { display: grid; gap: 30px; align-items: center; }
.about-banner { position: relative; border-radius: var(--radius-8); overflow: hidden; aspect-ratio: 3 / 4; margin-bottom: 30px; background-color: var(--light-gray); }
.about-banner .img-cover { object-position: center center; }
.play-btn { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: hsla(0, 0%, 100%, 0.8); color: var(--red-crayola); font-size: 32px; padding: 18px; border-radius: var(--radius-circle); box-shadow: 0 0 0 10px hsla(0, 0%, 100%, 0.2); z-index: 1; transition: transform var(--transition-1), background-color var(--transition-1); animation: pulse 2s ease-out infinite; border: none; }
.play-btn:is(:hover, :focus-visible) { transform: translate(-50%, -50%) scale(1.1); background-color: var(--white-1); }
.play-btn.paused { opacity: 0.7; animation-play-state: paused; }
@keyframes pulse { 0% { box-shadow: 0 0 0 0px hsla(0, 0%, 100%, 0.3); } 100% { box-shadow: 0 0 0 25px hsla(0, 0%, 100%, 0); } }
.about :is(.section-title, .section-text) { text-align: left; margin-inline: 0; }
.about .section-title { margin-bottom: 15px; }
.about .h3 { margin-block: 20px 10px; }
.about-list { margin-block: 15px 25px; list-style: none; padding: 0; }
.about-item { display: flex; align-items: flex-start; gap: 10px; }
.about-item ion-icon { color: var(--red-crayola); flex-shrink: 0; margin-block-start: 3px; font-size: 1.8rem; }
.about-item:not(:last-child) { margin-block-end: 15px; }

/*-----------------------------------*\
  #CTA SECTION (Standard)
\*-----------------------------------*/

.cta { position: relative; background-repeat: no-repeat; background-size: cover; background-position: center; background-attachment: fixed; z-index: 1; padding-block: 80px; text-align: center; }
.cta::before { content: ""; position: absolute; inset: 0; background-image: var(--gradient); opacity: 0.92; z-index: -1; }
.cta-subtitle, .cta .section-title { color: var(--white-1); }
.cta-subtitle { font-size: var(--fs-5); font-weight: var(--fw-500); }
.cta .section-title { margin-block: 12px 25px; }
.cta .btn { margin-inline: auto; }

/*-----------------------------------*\
  #CTA Connect Section Styles
\*-----------------------------------*/

.cta-connect { background-color: var(--white-1); padding-block: 80px; position: relative; overflow: hidden; transition: background-color 0.8s ease-in-out, opacity 0.7s ease-out, transform 0.7s ease-out; opacity: 0; transform: translateY(30px); }
.cta-connect-container { display: grid; grid-template-columns: 1fr; gap: 40px; align-items: center; position: relative; z-index: 1; }
.cta-connect-text { color: var(--eerie-black); max-width: 550px; z-index: 2; transition: color 0.8s ease-in-out; }
.cta-connect-heading { font-size: clamp(2.8rem, 5vw + 1rem, 4.5rem); color: var(--eerie-black); line-height: 1.2; margin-bottom: 30px; font-weight: 700; transition: color 0.8s ease-in-out; }
.cta-connect-point { font-size: var(--fs-5); margin-bottom: 15px; line-height: 1.6; color: var(--gray-web); transition: color 0.8s ease-in-out; }
.cta-connect-link { display: inline-block; color: var(--red-crayola); font-weight: var(--fw-500); text-decoration: underline; text-underline-offset: 4px; margin-top: 25px; transition: opacity var(--transition-1), color 0.8s ease-in-out; }
.cta-connect-link:is(:hover, :focus-visible) { opacity: 0.8; }
.cta-connect-graphic { max-width: 300px; width: 60%; margin-inline: auto; opacity: 0.8; z-index: 1; }
.cta-connect-graphic svg path { fill: var(--light-gray); stroke: var(--gray-web); transition: fill 0.8s ease-in-out, stroke 0.8s ease-in-out; }
.cta-connect-button { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); z-index: 3; background-color: var(--persian-rose); color: var(--white-1); font-weight: var(--fw-700); font-size: clamp(1.4rem, 2vw + 0.5rem, 1.8rem); padding: 0; width: 150px; height: 150px; border-radius: 50%; display: flex; align-items: center; justify-content: center; text-align: center; line-height: 1.2; box-shadow: 0 5px 15px rgba(0,0,0,0.2); transition: transform var(--transition-1), box-shadow var(--transition-1), background-color 0.8s ease-in-out, color 0.8s ease-in-out; border: none; }
.cta-connect-button:is(:hover, :focus-visible) { transform: translate(-50%, -50%) scale(1.05); box-shadow: 0 8px 20px rgba(0,0,0,0.25); background-color: var(--safety-orange); color: var(--white-1); }

/* --- Style for when section is IN VIEW --- */
.cta-connect.in-view { background-color: #0d6efd; opacity: 1; transform: translateY(0); } /* Combined in-view styles */
.cta-connect.in-view .cta-connect-text, .cta-connect.in-view .cta-connect-heading { color: var(--white-1); }
.cta-connect.in-view .cta-connect-point { color: hsla(0, 0%, 100%, 0.9); }
.cta-connect.in-view .cta-connect-link { color: var(--white-1); }
.cta-connect.in-view .cta-connect-link:is(:hover, :focus-visible) { opacity: 0.8; }
.cta-connect.in-view .cta-connect-graphic svg path { fill: var(--white-1); stroke: #ccc; }
.cta-connect.in-view .cta-connect-button { background-color: var(--white-1); color: #0d6efd; }
.cta-connect.in-view .cta-connect-button:is(:hover, :focus-visible) { background-color: var(--cultured); color: var(--persian-rose); }

/* --- End of CTA Connect Section Styles --- */


/*-----------------------------------*\
  #CONTACT SECTION
\*-----------------------------------*/

.contact { background-color: var(--white-2); }
.contact .section-text { margin-block-end: 50px; }
.contact-form { background-color: var(--white-1); padding: 30px; border-radius: var(--radius-8); margin-block-end: 40px; box-shadow: var(--shadow-1); }
.input-wrapper { display: grid; gap: 20px; margin-bottom: 20px; }
.input-field { background-color: var(--white-2); color: var(--eerie-black); font-size: var(--fs-5); padding: 15px 20px; border-radius: var(--input-radius); border: var(--input-border); outline: none; transition: border-color var(--transition-1), box-shadow var(--transition-1); }
.input-field:focus { border-color: var(--red-crayola); box-shadow: var(--focus-ring); }
.input-field::placeholder { color: var(--gray-web); transition: opacity var(--transition-1); }
.input-field:focus::placeholder { opacity: 0; }
.input-field[type="number"]::-webkit-inner-spin-button, .input-field[type="number"]::-webkit-outer-spin-button { display: none; margin: 0; }
.input-field[type="number"] { -moz-appearance: textfield; }
textarea.input-field { resize: vertical; min-height: 100px; height: 120px; max-height: 250px; overscroll-behavior: contain; margin-bottom: 20px; }
select.input-field { appearance: none; background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='%23888' viewBox='0 0 16 16'%3E%3Cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3E%3C/svg%3E"); background-repeat: no-repeat; background-position: right 15px center; background-size: 16px 16px; padding-right: 40px; }
select.input-field:required:invalid { color: var(--gray-web); }
select.input-field option[value=""][disabled] { display: none; }
select.input-field option { color: var(--eerie-black); background-color: var(--white-1); }
.checkbox-wrapper, .checkbox-group-wrapper { display: flex; align-items: flex-start; gap: 10px; margin-block: 15px 25px; }
.checkbox-group-wrapper { flex-direction: column; align-items: flex-start; gap: 10px; }
.form-label { font-size: var(--fs-5); font-weight: var(--fw-500); color: var(--eerie-black); margin-bottom: 5px; }
.checkbox-group { display: grid; gap: 10px; }
.checkbox-item { display: flex; align-items: center; gap: 8px; }
.checkbox-item label { font-size: var(--fs-6); cursor: pointer; }
.checkbox-item input[type="checkbox"] { width: 18px; height: 18px; accent-color: var(--red-crayola); cursor: pointer; margin: 0; flex-shrink: 0; }
.checkbox { width: 18px; height: 18px; margin-top: 3px; accent-color: var(--red-crayola); flex-shrink: 0; cursor: pointer; }
.checkbox-wrapper .label { font-size: var(--fs-6); line-height: 1.5; cursor: pointer; }
.label-link { display: inline; color: var(--red-crayola); text-decoration: underline; transition: color var(--transition-1); }
.label-link:is(:hover, :focus-visible) { color: var(--safety-orange); }
.contact-form .btn { width: 100%; max-width: 250px; margin-inline: auto; }
.spinner { display: inline-block; width: 1em; height: 1em; border: 2px solid currentColor; border-right-color: transparent; border-radius: 50%; animation: spin 1s linear infinite; vertical-align: middle; margin-left: 8px; }
@keyframes spin { to { transform: rotate(360deg); } }
.success-message, .error-message { padding: 20px; border-radius: var(--radius-5); text-align: center; margin-top: 20px; }
.success-message { background-color: hsl(130, 60%, 95%); border: 1px solid hsl(130, 60%, 80%); color: hsl(130, 80%, 25%); }
.error-message { background-color: hsl(0, 100%, 97%); border: 1px solid hsl(0, 100%, 85%); color: hsl(0, 70%, 50%); }
.success-message ion-icon { font-size: 3em; margin-bottom: 10px; color: hsl(130, 70%, 40%); }
.success-message h3 { margin-bottom: 10px; color: var(--eerie-black); }
.success-message .btn { margin-top: 15px; }
.contact-list { display: grid; gap: 25px; }
.contact-item { min-width: 0; }
.contact-card { background-color: var(--white-1); padding: 25px; border-radius: var(--radius-8); box-shadow: var(--shadow-1); display: flex; align-items: center; gap: 20px; height: 100%; }
.contact-card .card-icon { background-color: var(--cultured-2); color: var(--red-crayola); font-size: 24px; padding: 15px; border-radius: var(--radius-circle); flex-shrink: 0; transition: var(--transition-1); }
.contact-card:is(:hover, :focus-within) .card-icon { background-color: var(--red-crayola); color: var(--white-1); }
.contact-card .card-content { flex-grow: 1; }
.contact-card .card-title { margin-block-end: 8px; font-size: var(--fs-4); }
.contact-card :is(.card-link, .card-address) { font-size: var(--fs-6); transition: color var(--transition-1); line-height: 1.6; word-break: break-word; }
.contact-card .card-link:is(:hover, :focus) { color: var(--red-crayola); }
.contact-card address { margin-top: 5px; }

/*-----------------------------------*\
  #FOOTER
\*-----------------------------------*/

.footer { background-color: var(--white-2); padding-block: 30px; border-block-start: 1px solid var(--cultured); }
.copyright { font-size: var(--fs-6); text-align: center; color: var(--gray-web); }
.copyright-link { color: var(--red-crayola); font-weight: var(--fw-500); display: inline-block; transition: color var(--transition-1); }
.copyright-link:is(:hover, :focus-visible) { color: var(--safety-orange); }

/*-----------------------------------*\
  #BACK TO TOP BUTTON
\*-----------------------------------*/

.back-top-btn { position: fixed; bottom: 20px; right: 20px; background-color: var(--eerie-black); color: var(--white-1); font-size: 18px; padding: 12px; border-radius: var(--radius-circle); box-shadow: var(--shadow-2); z-index: 4; opacity: 0; visibility: hidden; transform: translateY(20px); transition: var(--transition-1), transform 0.3s ease; border: none; }
.back-top-btn.active { opacity: 1; visibility: visible; transform: translateY(0); }
.back-top-btn:is(:hover, :focus-visible) { opacity: 0.9; background-color: var(--red-crayola); }

/*-----------------------------------*\
  #POPUP STYLES (Project Details)
\*-----------------------------------*/

.popup-overlay { position: fixed; inset: 0; background: rgba(0,0,0,0.8); display: flex; justify-content: center; align-items: center; z-index: 1050; padding: 20px; opacity: 0; visibility: hidden; transition: opacity 0.3s ease, visibility 0s 0.3s; }
.popup-overlay.active { opacity: 1; visibility: visible; transition: opacity 0.3s ease; }
.popup-content { background: var(--white-1); width: 100%; max-width: 700px; padding: 30px; border-radius: var(--radius-8); position: relative; max-height: 90vh; overflow-y: auto; transform: scale(0.9); transition: transform 0.3s ease; }
.popup-overlay.active .popup-content { transform: scale(1); }
.close-popup { position: absolute; top: 10px; right: 15px; font-size: 30px; color: var(--gray-web); line-height: 1; cursor: pointer; padding: 5px; transition: color var(--transition-1); background: none; border: none; }
.close-popup:is(:hover, :focus-visible) { color: var(--red-crayola); }
.popup-content h3 { font-size: var(--fs-2); margin-bottom: 15px; }
.image-gallery { display: flex; gap: 15px; margin: 20px 0; overflow-x: auto; padding-bottom: 15px; scroll-snap-type: x mandatory; }
.popup-img { height: 250px; border-radius: var(--radius-5); box-shadow: var(--shadow-1); flex-shrink: 0; scroll-snap-align: start; }
.popup-content p { margin-bottom: 20px; line-height: var(--lh-base); }
.popup-content .services h4 { font-size: var(--fs-5); font-weight: var(--fw-700); margin-bottom: 10px; color: var(--eerie-black); }
.popup-content .services ul { display: flex; gap: 10px; flex-wrap: wrap; padding: 0; list-style: none; }
.popup-content .services li { background: var(--cultured); padding: 6px 12px; border-radius: 20px; font-size: var(--fs-6); color: var(--eerie-black); }

/*-----------------------------------*\
  #MEDIA QUERIES
\*-----------------------------------*/

/* Tablet Portrait (575px and up) */
@media (min-width: 575px) {
  .container { max-width: 540px; }
  .grid-list { grid-template-columns: 1fr 1fr; }
  .contact-form .btn { width: auto; }
  .contact-list { grid-template-columns: 1fr 1fr; }
  .process-step { grid-template-areas: "number image" "content image"; grid-template-columns: auto 1fr; align-items: start; padding-left: 70px; padding-bottom: 0; column-gap: 30px; }
  .process-step:not(:last-child)::after { left: 25px; top: 50px; bottom: -40px; height: auto; width: 2px; }
  .step-number { position: absolute; left: 0; top: 0; margin-bottom: 0; }
  .step-image { margin-top: 0; }
}

/* Tablet Landscape (768px and up) */
@media (min-width: 768px) {
  :root { --fs-1: 4.5rem; --fs-2: 3.7rem; --fs-3: 2.3rem; --fs-4: 1.8rem; --fs-5: 1.5rem; --fs-6: 1.4rem; }
  .container { max-width: 720px; }
  .hero .container { flex-direction: row; text-align: left; gap: 40px; }
  .hero-content { order: 1; flex: 1; }
  .hero-media-container { order: 2; flex-basis: 40%; max-width: 40%;}
  .hero .btn { margin-inline: 0; }
  .hero-text { margin-inline: 0; max-width: none; }
  .hero-subtitle, .hero-title { padding-inline-start: 0; }
  .hero-subtitle::before { display: none; }
  .contact-form { padding: 40px; }
  .process-step:nth-child(even) { grid-template-areas: "image number" "image content"; grid-template-columns: 1fr auto; padding-left: 0; padding-right: 70px; }
  .process-step:nth-child(even) .step-number { left: auto; right: 0; }
  .process-step:nth-child(even)::after { left: auto; right: 25px; }
  .checkbox-group { grid-template-columns: 1fr 1fr; gap: 10px 20px; }
  /* CTA Connect Responsive */
  .cta-connect-container { grid-template-columns: 1fr 1fr; gap: 60px; }
  .cta-connect-graphic { width: 100%; max-width: 400px; margin-inline: 0; margin-left: auto; opacity: 1; }
  .cta-connect-text { max-width: none; }
  .cta-connect-button { width: 180px; height: 180px; }
}

/* Small Desktop (992px and up) */
@media (min-width: 992px) {
  :root { --fs-1: 5rem; --fs-2: 4rem; --fs-3: 2.5rem; --section-padding: 100px; }
  .container { max-width: 960px; }
  .grid-list { grid-template-columns: repeat(3, 1fr); }
  .nav-toggle-btn { display: none; }
  .mobile-menu-overlay { display: none; }
  .navbar, .navbar.active { all: unset; display: flex; align-items: center; margin-left: auto; }
  .navbar-list { all: unset; display: flex; align-items: center; gap: 30px; }
  .navbar-link { position: relative; padding: 15px 0; border-bottom: none; font-size: var(--fs-5); }
  .navbar-link:is(:hover, :focus-visible, .active) { color: var(--eerie-black); }
  .navbar-link::after { content: ""; position: absolute; bottom: 10px; left: 0; width: 100%; height: 2px; background-image: var(--gradient); transform: scaleX(0); transform-origin: left; transition: transform var(--transition-2); }
  .navbar-link:is(:hover, :focus-visible, .active)::after { transform: scaleX(1); }
  .mobile-socials { display: none; }
  .hero-subtitle { position: relative; padding-inline-start: 15px; }
  .hero-subtitle::before { display: block; content: ""; position: absolute; top: 0; left: 0; width: 3px; height: 100%; background-color: var(--red-crayola); }
  .service-card { padding: 30px; }
  .service-card .h3 { --fs-3: 2.3rem; }
  .about .container { grid-template-columns: 1fr 1fr; gap: 50px; }
  .about-banner { margin-bottom: 0; }
  .input-wrapper { grid-template-columns: 1fr 1fr; }
  .contact-list { grid-template-columns: repeat(3, 1fr); }
  .contact-card { padding: 30px; }
  .contact-card .card-icon { font-size: 28px; }
  /* CTA Connect Responsive */
  .cta-connect-graphic { max-width: 450px; }
  .cta-connect-button { width: 200px; height: 200px; }
}

/* Large Desktop (1200px and up) */
@media (min-width: 1200px) {
  :root { --fs-1: 6rem; --fs-2: 4.5rem; --fs-4: 1.9rem; --fs-5: 1.6rem; --fs-6: 1.6rem; }
  .container { max-width: 1140px; }
  .btn { --fs-6: 1.5rem; padding: 14px 35px; }
  .service-card { padding: 35px; }
  .service-card .h3 { --fs-3: 2.5rem; }
  .about .container { gap: 60px; }
  .about-item { gap: 12px; }
  .about-item ion-icon { font-size: 2rem; }
  .cta .section-title { margin-block: 15px 30px; }
  .contact-form { padding: 50px; }
  .contact-card { gap: 25px; }
  .contact-card .card-icon { padding: 18px; }
  .process-step .step-content { font-size: var(--fs-5); }
  .checkbox-group { grid-template-columns: repeat(3, 1fr); }
}

/* ================================================== */
/* Mobile Responsive Styles for Stacking Cards      */
/* (Applies to screens smaller than 768px wide)     */
/* ================================================== */

@media (max-width: 767px) { /* Adjust breakpoint if needed */

  /* Change card body flex direction to vertical */
  .card-body {
      flex-direction: column; /* Stack columns vertically */
      justify-content: flex-start; /* Align content to top */
      padding: 40px 30px; /* Adjust padding for mobile */
  }

  /* Make text column full width and add spacing below */
  .card-text-column {
      flex-basis: auto; /* Reset flex basis */
      width: 100%;      /* Take full width */
      padding-right: 0; /* Remove padding between columns */
      margin-bottom: 40px; /* Add space below text, before image/video */
      text-align: center; /* Center text on mobile? Or keep left? */
  }

   /* Ensure text alignment within the text column */
  .card-text-column .card-title,
  .card-text-column .card-text,
  .card-text-column .card-step-number {
       text-align: center; /* Center text on mobile? Or keep left? */
       /* margin-left: auto; */ /* Remove if centering text */
       /* margin-right: auto; */ /* Remove if centering text */
  }
   .card-text-column .card-step-number {
      margin-left: auto;
      margin-right: auto; /* Center step number if text is centered */
   }


  /* Make image/video column take appropriate width */
  .card-image-column {
      flex-basis: auto;  /* Reset flex basis */
      width: 100%;       /* Adjust width as needed, e.g., 90% or 100% */
      max-width: 400px;  /* Optional: Limit max size */
      order: 2; /* Ensure image/video comes after text if needed (usually automatic with column flex) */
  }

   /* Optional: Adjust heading size on mobile */
   .card-title {
       font-size: var(--fs-3); /* Use a smaller heading size */
   }

   /* Optional: Adjust card height on mobile if not already done */
   /* If you haven't used the responsive --cardHeight variable yet: */
   /*
   :root {
       --cardHeight: 75vh;
   }
   .card-body,
   #cards {
       grid-template-rows: repeat(var(--cards), var(--cardHeight));
   }
   .card-body{
       height: var(--cardHeight);
   }
   */

} /* End of @media query */